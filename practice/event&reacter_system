我们知道Master与Minion是基于ZMQ通信的，他们通信我们看来是消息队列，对它们来说这些消息就是一些事件，什么事件应该做什么，是salt基本已经预设好了。
我们学习它的事件系统来完成一些自定义的行为，后面的反应系统就是基于事件系统的。一条消息其实就是一个事件，事件通常是一个字典数据，这个字典数据通常包含tag,
这个tag是用来区分用途过滤消息的，详见绿大-https://groups.google.com/forum/#!topic/saltstack-users-cn/wXVE4ydnnzc ,让我们来看看这些事件。




####  监听event 

#####  方法一：
```
wget https://raw.githubusercontent.com/saltstack/salt/develop/tests/eventlisten.py
python eventlisten.py
```
再打开一个master 终端，执行 `salt 'minion1' test.ping `

观察第一个master终端的输出如下：


##### 方法二：
可以通过以下命令查看event事件，然后再打开一个终端执行任务
`salt-run state.event pretty=True`


##### 方法三：

`vim monitor_event.py`
```
import salt.utils.event
event = salt.utils.event.MasterEvent('/var/run/salt/master')
for eachevent in event.iter_events(full=True):
    print eachevent
    print "------"
```
`python monitor_event.py`
 
